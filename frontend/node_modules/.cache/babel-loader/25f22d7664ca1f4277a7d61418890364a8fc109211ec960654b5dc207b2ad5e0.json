{"ast":null,"code":"// While filters are precompiled, pseudos get called when they are needed\nexport const pseudos = {\n  empty(elem, {\n    adapter\n  }) {\n    return !adapter.getChildren(elem).some(elem =>\n    // FIXME: `getText` call is potentially expensive.\n    adapter.isTag(elem) || adapter.getText(elem) !== \"\");\n  },\n  \"first-child\"(elem, {\n    adapter,\n    equals\n  }) {\n    if (adapter.prevElementSibling) {\n      return adapter.prevElementSibling(elem) == null;\n    }\n    const firstChild = adapter.getSiblings(elem).find(elem => adapter.isTag(elem));\n    return firstChild != null && equals(elem, firstChild);\n  },\n  \"last-child\"(elem, {\n    adapter,\n    equals\n  }) {\n    const siblings = adapter.getSiblings(elem);\n    for (let i = siblings.length - 1; i >= 0; i--) {\n      if (equals(elem, siblings[i])) return true;\n      if (adapter.isTag(siblings[i])) break;\n    }\n    return false;\n  },\n  \"first-of-type\"(elem, {\n    adapter,\n    equals\n  }) {\n    const siblings = adapter.getSiblings(elem);\n    const elemName = adapter.getName(elem);\n    for (let i = 0; i < siblings.length; i++) {\n      const currentSibling = siblings[i];\n      if (equals(elem, currentSibling)) return true;\n      if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n        break;\n      }\n    }\n    return false;\n  },\n  \"last-of-type\"(elem, {\n    adapter,\n    equals\n  }) {\n    const siblings = adapter.getSiblings(elem);\n    const elemName = adapter.getName(elem);\n    for (let i = siblings.length - 1; i >= 0; i--) {\n      const currentSibling = siblings[i];\n      if (equals(elem, currentSibling)) return true;\n      if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n        break;\n      }\n    }\n    return false;\n  },\n  \"only-of-type\"(elem, {\n    adapter,\n    equals\n  }) {\n    const elemName = adapter.getName(elem);\n    return adapter.getSiblings(elem).every(sibling => equals(elem, sibling) || !adapter.isTag(sibling) || adapter.getName(sibling) !== elemName);\n  },\n  \"only-child\"(elem, {\n    adapter,\n    equals\n  }) {\n    return adapter.getSiblings(elem).every(sibling => equals(elem, sibling) || !adapter.isTag(sibling));\n  }\n};\nexport function verifyPseudoArgs(func, name, subselect, argIndex) {\n  if (subselect === null) {\n    if (func.length > argIndex) {\n      throw new Error(`Pseudo-class :${name} requires an argument`);\n    }\n  } else if (func.length === argIndex) {\n    throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n  }\n}","map":{"version":3,"names":["pseudos","empty","elem","adapter","getChildren","some","isTag","getText","first-child","equals","prevElementSibling","firstChild","getSiblings","find","last-child","siblings","i","length","first-of-type","elemName","getName","currentSibling","last-of-type","only-of-type","every","sibling","only-child","verifyPseudoArgs","func","name","subselect","argIndex","Error"],"sources":["https://raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/pseudo-selectors/pseudos.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}