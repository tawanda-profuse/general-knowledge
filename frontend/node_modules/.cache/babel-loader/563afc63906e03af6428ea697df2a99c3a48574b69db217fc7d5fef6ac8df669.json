{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TawandaMsengezi\\\\Documents\\\\Upwork\\\\Osama-Client\\\\Khamco Shop\\\\Shop-1\\\\client\\\\src\\\\components\\\\Selector.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Selector = ({\n  label,\n  price,\n  type,\n  quantity,\n  setOptions\n}) => {\n  _s();\n  const [isChecked, setIsChecked] = useState(false);\n  useEffect(() => {\n    if (quantity <= 0) {\n      toast.warn(`${label} is finished`);\n    }\n  }, [label, quantity]);\n  const handleCheck = () => {\n    if (isChecked) {\n      setOptions(prevArray => prevArray.filter(item => item.name !== label));\n    } else {\n      setOptions(prevArray => {\n        const exists = prevArray.some(item => item.name === label);\n        if (!exists) {\n          return [...prevArray, {\n            name: label,\n            price: price,\n            quantity: 1,\n            type\n          }];\n        }\n        return prevArray;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: `p-2 w-[10rem] md:w-[8rem] flex flex-col items-center gap-2 cursor-pointer rounded-xl border-2 border-khamco-primary text-center font-medium ${isChecked ? \"bg-[#ccc]\" : \"\"}`,\n    onClick: handleCheck,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm\",\n      children: [label, \" - $\", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: isChecked,\n      onChange: () => {\n        setIsChecked(!isChecked);\n      },\n      className: \"accent-khamco-primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Selector, \"0JDRpl6hj96HOi0frTBApbOrHao=\");\n_c = Selector;\nexport default Selector;\nvar _c;\n$RefreshReg$(_c, \"Selector\");","map":{"version":3,"names":["useEffect","useState","toast","jsxDEV","_jsxDEV","Selector","label","price","type","quantity","setOptions","_s","isChecked","setIsChecked","warn","handleCheck","prevArray","filter","item","name","exists","some","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/TawandaMsengezi/Documents/Upwork/Osama-Client/Khamco Shop/Shop-1/client/src/components/Selector.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Selector = ({ label, price, type, quantity, setOptions }) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if(quantity <= 0){\r\n      toast.warn(`${label} is finished`);\r\n    }\r\n  },[label, quantity])\r\n\r\n  const handleCheck = () => {\r\n    if (isChecked) {\r\n      setOptions((prevArray) =>\r\n        prevArray.filter((item) => item.name !== label)\r\n      );\r\n    } else {\r\n      setOptions((prevArray) => {\r\n        const exists = prevArray.some((item) => item.name === label);\r\n        if (!exists) {\r\n          return [...prevArray, { name: label, price: price, quantity: 1, type }];\r\n        }\r\n        return prevArray;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <label\r\n      className={`p-2 w-[10rem] md:w-[8rem] flex flex-col items-center gap-2 cursor-pointer rounded-xl border-2 border-khamco-primary text-center font-medium ${\r\n        isChecked ? \"bg-[#ccc]\" : \"\"\r\n      }`}\r\n      onClick={handleCheck}\r\n    >\r\n      <p className=\"text-sm\">\r\n        {label} - ${price}\r\n      </p>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={isChecked}\r\n        onChange={() => {\r\n          setIsChecked(!isChecked);\r\n        }}\r\n        className=\"accent-khamco-primary\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Selector;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAI;IACZ,IAAGS,QAAQ,IAAI,CAAC,EAAC;MACfP,KAAK,CAACY,IAAI,CAAC,GAAGR,KAAK,cAAc,CAAC;IACpC;EACF,CAAC,EAAC,CAACA,KAAK,EAAEG,QAAQ,CAAC,CAAC;EAEpB,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIH,SAAS,EAAE;MACbF,UAAU,CAAEM,SAAS,IACnBA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAKb,KAAK,CAChD,CAAC;IACH,CAAC,MAAM;MACLI,UAAU,CAAEM,SAAS,IAAK;QACxB,MAAMI,MAAM,GAAGJ,SAAS,CAACK,IAAI,CAAEH,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAKb,KAAK,CAAC;QAC5D,IAAI,CAACc,MAAM,EAAE;UACX,OAAO,CAAC,GAAGJ,SAAS,EAAE;YAAEG,IAAI,EAAEb,KAAK;YAAEC,KAAK,EAAEA,KAAK;YAAEE,QAAQ,EAAE,CAAC;YAAED;UAAK,CAAC,CAAC;QACzE;QACA,OAAOQ,SAAS;MAClB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEZ,OAAA;IACEkB,SAAS,EAAE,+IACTV,SAAS,GAAG,WAAW,GAAG,EAAE,EAC3B;IACHW,OAAO,EAAER,WAAY;IAAAS,QAAA,gBAErBpB,OAAA;MAAGkB,SAAS,EAAC,SAAS;MAAAE,QAAA,GACnBlB,KAAK,EAAC,MAAI,EAACC,KAAK;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACJxB,OAAA;MACEI,IAAI,EAAC,UAAU;MACfqB,OAAO,EAAEjB,SAAU;MACnBkB,QAAQ,EAAEA,CAAA,KAAM;QACdjB,YAAY,CAAC,CAACD,SAAS,CAAC;MAC1B,CAAE;MACFU,SAAS,EAAC;IAAuB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ,CAAC;AAACjB,EAAA,CA7CIN,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}