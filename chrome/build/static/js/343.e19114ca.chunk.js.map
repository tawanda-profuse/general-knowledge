{"version":3,"file":"static/js/343.e19114ca.chunk.js","mappings":"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","sources":["components/Create.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport cross from \"../assets/close_white_24dp.svg\";\r\n\r\nconst Create = () => {\r\n  const apiUrl = window.location.origin.includes(\"localhost\")\r\n    ? \"http://localhost:8000\"\r\n    : \"https://general-knowledge-eta.vercel.app\";\r\n  // States for the quiz category and category photo\r\n  const [category, setCategory] = useState(\"\");\r\n  // State for holding multiple questions\r\n  const [questions, setQuestions] = useState([\r\n    { question: \"\", picture: \"\", answers: [] }, // Initial empty question\r\n  ]);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [submitModal, setSubmitModal] = useState(false);\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = async () => {\r\n    setIsPending(true);\r\n\r\n    if (!category) {\r\n      toast.warn(\"Please enter a quiz category\");\r\n      setIsPending(false);\r\n      return;\r\n    }\r\n\r\n    if (questions.length < 2) {\r\n      toast.warn(\"Every quiz should have at least 2 questions\");\r\n      setIsPending(false);\r\n      return;\r\n    }\r\n\r\n    if (questions.some((question) => !question.question)) {\r\n      toast.warn(\"Every question should have some text\");\r\n      setIsPending(false);\r\n      return;\r\n    }\r\n\r\n    if (questions.some((question) => question.answers.length < 2)) {\r\n      toast.warn(\"Every question should have at least 2 answers\");\r\n      setIsPending(false);\r\n      return;\r\n    }\r\n\r\n    if (\r\n      questions.some((question) =>\r\n        question.answers.every((answer) => !answer.correct)\r\n      )\r\n    ) {\r\n      toast.warn(\"Every question should have 1 correct answer\");\r\n      setIsPending(false);\r\n      return;\r\n    }\r\n\r\n    if (\r\n      questions.some((question) =>\r\n        question.answers.every((answer) => answer.correct)\r\n      )\r\n    ) {\r\n      toast.warn(\"Question answers cannot all be correct\");\r\n      setIsPending(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(apiUrl + \"/quiz\", {\r\n        category: category,\r\n        quiz: questions,\r\n      });\r\n      console.log({\r\n        category: category,\r\n        quiz: questions,\r\n      });\r\n      toast.success(response.data.message);\r\n      setIsSubmitted(true);\r\n    } catch (error) {\r\n      console.error(\"Error: \", error);\r\n      toast.error(error.response?.data?.message || error.message);\r\n    } finally {\r\n      setIsPending(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(questions.length);\r\n  }, [questions.length]);\r\n\r\n  // Function to handle adding a new question\r\n  const addQuestion = () => {\r\n    setQuestions([\r\n      ...questions,\r\n      { question: \"\", picture: \"\", answers: [] }, // Adds a new empty question object\r\n    ]);\r\n  };\r\n\r\n  // Function to handle question change\r\n  const updateQuestion = (index, updatedQuestion) => {\r\n    const updatedQuestions = questions.map((q, i) =>\r\n      i === index ? updatedQuestion : q\r\n    );\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  const removeQuestion = (index) => {\r\n    const updatedQuestions = questions.filter((_, i) => index !== i);\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Sidebar />\r\n      {!isSubmitted && (\r\n        <form className=\"m-auto w-[90vw] md:w-2/4 bg-[white] rounded-lg p-[1rem] overflow-y-scroll h-[80vh] flex flex-col gap-[2rem] absolute top-2/4 left-2/4 -translate-x-2/4 -translate-y-2/4\">\r\n          <h1 className=\"text-center underline text-[2rem]\">Create a Quiz</h1>\r\n\r\n          {/* Input for Quiz Category */}\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setCategory(e.target.value)}\r\n            placeholder=\"Enter the quiz category\"\r\n            className=\"text-[1.2rem] outline-none rounded-md border-2 border-[black] p-[0.5rem] focus:border-[#440066]\"\r\n          />\r\n\r\n          <h2 className=\"text-center underline text-[2rem]\">Quiz Questions</h2>\r\n\r\n          {/* Dynamically render multiple Question components */}\r\n          {questions.map((questionData, index) => (\r\n            <Question\r\n              key={index}\r\n              index={index}\r\n              questionData={questionData}\r\n              updateQuestion={updateQuestion}\r\n              removeQuestion={removeQuestion}\r\n            />\r\n          ))}\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={addQuestion}\r\n            className=\"bg-[tomato] text-[white] p-[0.5rem] text-[1rem] rounded-md hover:opacity-80\"\r\n          >\r\n            Add a Question <i className=\"fas fa-plus\"></i>\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setSubmitModal(true)}\r\n            className={`bg-[#440066] ${\r\n              isPending ? \"animate-pulse\" : \"\"\r\n            } p-[0.5rem] text-[1rem] text-[white] rounded-md hover:opacity-80`}\r\n            disabled={isPending}\r\n          >\r\n            {isPending ? \"Loading...\" : \"Submit\"}\r\n          </button>\r\n        </form>\r\n      )}\r\n      <div\r\n        className={`m-auto w-[90vw] md:w-2/4 bg-[white] rounded-lg p-[1rem] overflow-y-scroll h-[60vh] ${\r\n          isSubmitted ? \"flex\" : \"hidden\"\r\n        } flex-col items-center gap-[2rem] absolute top-2/4 left-2/4 -translate-x-2/4 -translate-y-2/4 transition-all`}\r\n      >\r\n        <h1 className=\"text-[#440066] font-bold text-[3rem] text-center\">\r\n          Thank you!\r\n        </h1>\r\n        <p className=\"text-pretty\">\r\n          Your quiz has been submitted successfully! Wait for a short while as\r\n          it is being reviewed after which it will be available from the list of\r\n          quizzes in the side menu. Contact Tawanda via{\" \"}\r\n          <a\r\n            href=\"mailto:tawandamsengezi@gmail.com\"\r\n            className=\"text-[purple] hover:underline italic\"\r\n          >\r\n            tawandamsengezi@gmail.com\r\n          </a>{\" \"}\r\n          to have your quiz reviewed sooner.\r\n        </p>\r\n        <Link to={\"/\"} className=\"btn text-center\">\r\n          Okay\r\n        </Link>\r\n      </div>\r\n      {submitModal && !isSubmitted && (\r\n        <div className=\"m-auto w-[90vw] md:w-2/4 bg-[skyblue] rounded-lg p-[1rem] px-[2rem] md:px-0 overflow-y-scroll flex flex-col gap-[2rem] absolute top-2/4 left-2/4 -translate-x-2/4 -translate-y-2/4\">\r\n          <h1 className=\"text-center underline text-[2rem]\">\r\n            Are you sure you want submit your quiz?\r\n          </h1>\r\n          <div className=\"flex flex-col md:flex-row mt-[4rem] justify-center gap-[1rem]\">\r\n            <button\r\n              onClick={handleSubmit}\r\n              className=\"bg-[lawngreen] w-full md:w-1/4 p-[0.5rem] text-[1.2rem] rounded-md hover:opacity-80\"\r\n            >\r\n              Yes\r\n            </button>\r\n            <button\r\n              onClick={() => setSubmitModal(false)}\r\n              className=\"bg-[tomato] w-full md:w-1/4 p-[0.5rem] text-[1.2rem] rounded-md hover:opacity-80\"\r\n            >\r\n              Not yet\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// Question Component to handle individual question details\r\nexport const Question = ({\r\n  index,\r\n  questionData,\r\n  updateQuestion,\r\n  removeQuestion,\r\n}) => {\r\n  const { question, picture, answers } = questionData;\r\n\r\n  // Function to handle updates to the question text\r\n  const handleQuestionChange = (e) => {\r\n    updateQuestion(index, { ...questionData, question: e.target.value });\r\n  };\r\n\r\n  // Function to handle updates to the image URL\r\n  const handlePictureChange = (e) => {\r\n    updateQuestion(index, { ...questionData, picture: e.target.value });\r\n  };\r\n\r\n  // Function to handle updates to answers\r\n  const handleAnswerChange = (answerIndex, answerText) => {\r\n    const updatedAnswers = answers.map((a, i) =>\r\n      i === answerIndex ? { ...a, text: answerText } : a\r\n    );\r\n    updateQuestion(index, { ...questionData, answers: updatedAnswers });\r\n  };\r\n\r\n  // Function to handle whether answer is correct or false\r\n  const handleAnswerCorrection = (answerIndex, correct) => {\r\n    const updatedAnswers = answers.map((a, i) =>\r\n      i === answerIndex ? { ...a, correct: correct } : a\r\n    );\r\n    updateQuestion(index, { ...questionData, answers: updatedAnswers });\r\n  };\r\n\r\n  // Function to handle whether answer is correct or false\r\n  const removeAnswer = (answerText) => {\r\n    const exists = answers.some((answer) => answer.text === answerText);\r\n    let updatedAnswers = [];\r\n    if (exists) {\r\n      updatedAnswers = answers.filter((answer) => answer.text !== answerText);\r\n    } else {\r\n      updatedAnswers = answers.map((a) => a);\r\n    }\r\n    updateQuestion(index, { ...questionData, answers: updatedAnswers });\r\n  };\r\n\r\n  // Function to add a new empty answer\r\n  const addAnswer = () => {\r\n    updateQuestion(index, {\r\n      ...questionData,\r\n      answers: [...answers, { text: \"\", correct: false }],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-[1rem] py-[0.5rem] border-b-2 border-black md:border-none\">\r\n      <div className=\"flex justify-start gap-[2rem] flex-wrap\">\r\n        <h3 className=\"text-[2rem]\">Question {index + 1}</h3>{\" \"}\r\n        {index > 0 && (\r\n          <button\r\n            className=\"px-[1rem] bg-[black] text-white rounded-md transition-all duration-150 hover:scale-[1.1]\"\r\n            type=\"button\"\r\n            onClick={() => removeQuestion(index)}\r\n          >\r\n            Remove Question\r\n          </button>\r\n        )}\r\n      </div>\r\n      {/* Input for the question text */}\r\n      <input\r\n        type=\"text\"\r\n        value={question}\r\n        onChange={handleQuestionChange}\r\n        placeholder=\"Enter the question\"\r\n        className=\"text-[1.2rem] outline-none rounded-md border-2 border-[black] p-[0.5rem] focus:border-[#440066]\"\r\n      />\r\n      {/* Input for the image URL */}\r\n      <input\r\n        type=\"text\"\r\n        value={picture}\r\n        onChange={handlePictureChange}\r\n        placeholder=\"Paste an image URL for a hint of the answer (optional)\"\r\n        className=\"text-[1.2rem] outline-none rounded-md border-2 border-[black] p-[0.5rem] focus:border-[#440066]\"\r\n      />\r\n      {/* Display and handle multiple choice answers */}\r\n      {answers.map((answer, i) => (\r\n        <div\r\n          className=\"flex items-center justify-between w-full flex-wrap gap-[1rem] md:gap-0 py-[0.5rem]\"\r\n          key={i}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={answer.text}\r\n            onChange={(e) => handleAnswerChange(i, e.target.value)}\r\n            placeholder={`Multiple choice answer ${i + 1}`}\r\n            className=\"text-[1.2rem] outline-none rounded-md border-2 border-[black] p-[0.5rem] focus:border-[#440066] w-full md:w-2/4\"\r\n          />\r\n          <div\r\n            className={`flex gap-[1rem] p-[0.5rem] rounded-lg ${\r\n              answer.correct ? \"bg-[lawngreen]\" : \"bg-[tomato]\"\r\n            }`}\r\n          >\r\n            <label className=\"font-bold\">\r\n              {answer.correct ? \"Correct\" : \"Incorrect\"}\r\n            </label>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={answer.text}\r\n              onChange={(e) =>\r\n                handleAnswerCorrection(i, answer.correct ? false : true)\r\n              }\r\n              className=\"w-[2rem] focus:accent-[#440066] cursor-pointer\"\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={() => removeAnswer(answer.text)}\r\n            className=\"w-[2rem] bg-[red] rounded-full transition-all duration-150 hover:scale-[1.1]\"\r\n            type=\"button\"\r\n          >\r\n            <img src={cross} alt=\"\" />\r\n          </button>\r\n        </div>\r\n      ))}\r\n      {/* Button to add new answer */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={addAnswer}\r\n        className=\"self-start bg-[lawngreen] p-[0.5rem] text-[1rem] rounded-md hover:opacity-80\"\r\n      >\r\n        Add Answer\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n"],"names":["Question","_ref","index","questionData","updateQuestion","removeQuestion","question","picture","answers","_jsxs","className","children","_jsx","type","onClick","value","onChange","e","target","placeholder","map","answer","i","text","handleAnswerChange","answerIndex","answerText","updatedAnswers","a","concat","correct","handleAnswerCorrection","some","filter","removeAnswer","src","cross","alt","addAnswer","Create","apiUrl","window","location","origin","includes","category","setCategory","useState","questions","setQuestions","isPending","setIsPending","isSubmitted","setIsSubmitted","submitModal","setSubmitModal","useEffect","console","log","length","updatedQuestion","updatedQuestions","q","_","_Fragment","Sidebar","addQuestion","disabled","href","Link","to","async","toast","warn","every","response","axios","post","quiz","success","data","message","error","_error$response","_error$response$data"],"sourceRoot":""}